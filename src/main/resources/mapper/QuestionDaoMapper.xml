<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.imooc.dao.QuestionDao">

    <resultMap id="questionMap" type="java.util.Map">
    <id column="question_id" property="questionId"></id>
    <result column="title" property="title"></result>
    <result column="content" property="content"></result>
    <result column="publisher" property="publisher"></result>
    <result column="course_id" property="courseId"></result>
    <result column="video_id" property="videoId"></result>
    <result column="pageviews" property="pageviews"></result>
    <result column="likes" property="likes"></result>
    <result column="create_time" property="createTime"></result>
    <result column="issolve" property="issolve"></result>
    <result column="answer" property="answer"></result>
    <association property="customer" javaType="java.util.Map">
        <id column="customer_id" property="customerId"></id>
        <result column="customer_photo" property="customerPhoto"></result>
    </association>
    </resultMap>

    <resultMap id="questionMap2" type="java.util.Map">
        <id column="question_id" property="questionId"></id>
        <result column="title" property="title"></result>
        <result column="content" property="content"></result>
        <result column="publisher" property="publisher"></result>
        <result column="course_id" property="courseId"></result>
        <result column="video_id" property="videoId"></result>
        <result column="pageviews" property="pageviews"></result>
        <result column="likes" property="likes"></result>
        <result column="create_time" property="createTime"></result>
        <result column="issolve" property="issolve"></result>
        <result column="answer" property="answer"></result>
        <association property="video" javaType="java.util.Map">
            <id column="video_id" property="videoId"></id>
            <result column="video_name" property="videoName"></result>
        </association>
    </resultMap>

    <select id="findByCourse" resultMap="questionMap">
        SELECT
            question.*,
            (SELECT COUNT(1) FROM answer WHERE answer.question_id = question.question_id) AS answer,
            customer.customer_id,
            customer.customer_nickname,
            customer.customer_photo
        FROM question
        LEFT JOIN customer
        ON question.publisher = customer.customer_id
        WHERE question.course_id = #{courseId}
        AND question.question_isenable = 0
        ORDER BY question.create_time DESC
    </select>

    <select id="findByVideo" resultMap="questionMap">
        SELECT
            question.*,
            (SELECT COUNT(1) FROM answer WHERE answer.question_id = question.question_id) AS answer,
            customer.customer_id,
            customer.customer_nickname,
            customer.customer_photo
        FROM question
        LEFT JOIN customer
        ON question.publisher = customer.customer_id
        WHERE question.video_id = #{videoId}
        AND question.question_isenable = 0
        ORDER BY question.create_time DESC
    </select>

    <select id="findById" resultMap="questionMap">
        SELECT
            question.*,
            (SELECT COUNT(1) FROM answer WHERE answer.question_id = question.question_id) AS answer,
            customer.customer_id,
            customer.customer_nickname,
            customer.customer_photo
        FROM question
        LEFT JOIN customer
        ON question.publisher = customer.customer_id
        WHERE question.question_id = #{questionId}
    </select>

    <!-- 浏览量增加 -->
    <update id="browse">
        UPDATE question SET pageviews = pageviews + 1 WHERE question.question_id = #{questionId}
    </update>

    <select id="findByCustomer" resultMap="questionMap2">
        select
          question.*,
          (SELECT COUNT(1) FROM answer WHERE answer.question_id = question.question_id) as answer,
          video.video_id,
          video.video_name
        from question
        left join customer
        on question.publisher = customer.customer_id
        left join course
        on question.course_id = course.course_id
        left join video
        on question.video_id = video.video_id
        where customer.customer_id=#{customerId}
        order by question.create_time desc
    </select>
</mapper>
